// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/NpoolPlatform/sphinx-coininfo/pkg/db/ent/coininfo"
	"github.com/NpoolPlatform/sphinx-coininfo/pkg/db/ent/description"
	"github.com/NpoolPlatform/sphinx-coininfo/pkg/db/ent/schema"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	coininfoFields := schema.CoinInfo{}.Fields()
	_ = coininfoFields
	// coininfoDescName is the schema descriptor for name field.
	coininfoDescName := coininfoFields[1].Descriptor()
	// coininfo.NameValidator is a validator for the "name" field. It is called by the builders before save.
	coininfo.NameValidator = coininfoDescName.Validators[0].(func(string) error)
	// coininfoDescUnit is the schema descriptor for unit field.
	coininfoDescUnit := coininfoFields[2].Descriptor()
	// coininfo.DefaultUnit holds the default value on creation for the unit field.
	coininfo.DefaultUnit = coininfoDescUnit.Default.(string)
	// coininfo.UnitValidator is a validator for the "unit" field. It is called by the builders before save.
	coininfo.UnitValidator = coininfoDescUnit.Validators[0].(func(string) error)
	// coininfoDescReservedAmount is the schema descriptor for reserved_amount field.
	coininfoDescReservedAmount := coininfoFields[3].Descriptor()
	// coininfo.DefaultReservedAmount holds the default value on creation for the reserved_amount field.
	coininfo.DefaultReservedAmount = coininfoDescReservedAmount.Default.(uint64)
	// coininfoDescPreSale is the schema descriptor for pre_sale field.
	coininfoDescPreSale := coininfoFields[4].Descriptor()
	// coininfo.DefaultPreSale holds the default value on creation for the pre_sale field.
	coininfo.DefaultPreSale = coininfoDescPreSale.Default.(bool)
	// coininfoDescLogo is the schema descriptor for logo field.
	coininfoDescLogo := coininfoFields[5].Descriptor()
	// coininfo.DefaultLogo holds the default value on creation for the logo field.
	coininfo.DefaultLogo = coininfoDescLogo.Default.(string)
	// coininfoDescEnv is the schema descriptor for env field.
	coininfoDescEnv := coininfoFields[6].Descriptor()
	// coininfo.DefaultEnv holds the default value on creation for the env field.
	coininfo.DefaultEnv = coininfoDescEnv.Default.(string)
	// coininfoDescForPay is the schema descriptor for for_pay field.
	coininfoDescForPay := coininfoFields[7].Descriptor()
	// coininfo.DefaultForPay holds the default value on creation for the for_pay field.
	coininfo.DefaultForPay = coininfoDescForPay.Default.(bool)
	// coininfoDescHomePage is the schema descriptor for home_page field.
	coininfoDescHomePage := coininfoFields[8].Descriptor()
	// coininfo.DefaultHomePage holds the default value on creation for the home_page field.
	coininfo.DefaultHomePage = coininfoDescHomePage.Default.(string)
	// coininfoDescSpecs is the schema descriptor for specs field.
	coininfoDescSpecs := coininfoFields[9].Descriptor()
	// coininfo.DefaultSpecs holds the default value on creation for the specs field.
	coininfo.DefaultSpecs = coininfoDescSpecs.Default.(string)
	// coininfoDescCreatedAt is the schema descriptor for created_at field.
	coininfoDescCreatedAt := coininfoFields[10].Descriptor()
	// coininfo.DefaultCreatedAt holds the default value on creation for the created_at field.
	coininfo.DefaultCreatedAt = coininfoDescCreatedAt.Default.(func() uint32)
	// coininfoDescUpdatedAt is the schema descriptor for updated_at field.
	coininfoDescUpdatedAt := coininfoFields[11].Descriptor()
	// coininfo.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	coininfo.DefaultUpdatedAt = coininfoDescUpdatedAt.Default.(func() uint32)
	// coininfo.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	coininfo.UpdateDefaultUpdatedAt = coininfoDescUpdatedAt.UpdateDefault.(func() uint32)
	// coininfoDescDeletedAt is the schema descriptor for deleted_at field.
	coininfoDescDeletedAt := coininfoFields[12].Descriptor()
	// coininfo.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	coininfo.DefaultDeletedAt = coininfoDescDeletedAt.Default.(func() uint32)
	// coininfoDescID is the schema descriptor for id field.
	coininfoDescID := coininfoFields[0].Descriptor()
	// coininfo.DefaultID holds the default value on creation for the id field.
	coininfo.DefaultID = coininfoDescID.Default.(func() uuid.UUID)
	descriptionFields := schema.Description{}.Fields()
	_ = descriptionFields
	// descriptionDescMessage is the schema descriptor for message field.
	descriptionDescMessage := descriptionFields[3].Descriptor()
	// description.MessageValidator is a validator for the "message" field. It is called by the builders before save.
	description.MessageValidator = descriptionDescMessage.Validators[0].(func(string) error)
	// descriptionDescCreatedAt is the schema descriptor for created_at field.
	descriptionDescCreatedAt := descriptionFields[5].Descriptor()
	// description.DefaultCreatedAt holds the default value on creation for the created_at field.
	description.DefaultCreatedAt = descriptionDescCreatedAt.Default.(func() uint32)
	// descriptionDescUpdatedAt is the schema descriptor for updated_at field.
	descriptionDescUpdatedAt := descriptionFields[6].Descriptor()
	// description.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	description.DefaultUpdatedAt = descriptionDescUpdatedAt.Default.(func() uint32)
	// description.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	description.UpdateDefaultUpdatedAt = descriptionDescUpdatedAt.UpdateDefault.(func() uint32)
	// descriptionDescDeletedAt is the schema descriptor for deleted_at field.
	descriptionDescDeletedAt := descriptionFields[7].Descriptor()
	// description.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	description.DefaultDeletedAt = descriptionDescDeletedAt.Default.(func() uint32)
	// descriptionDescID is the schema descriptor for id field.
	descriptionDescID := descriptionFields[0].Descriptor()
	// description.DefaultID holds the default value on creation for the id field.
	description.DefaultID = descriptionDescID.Default.(func() uuid.UUID)
}
