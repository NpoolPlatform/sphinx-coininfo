// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.0--rc1
// source: npool/sphinx-coininfo.proto

package npool

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 获取币种请求
type GetCoinInfosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCoinInfosRequest) Reset() {
	*x = GetCoinInfosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_sphinx_coininfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinInfosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinInfosRequest) ProtoMessage() {}

func (x *GetCoinInfosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_sphinx_coininfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinInfosRequest.ProtoReflect.Descriptor instead.
func (*GetCoinInfosRequest) Descriptor() ([]byte, []int) {
	return file_npool_sphinx_coininfo_proto_rawDescGZIP(), []int{0}
}

// request body and response
type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,100,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_sphinx_coininfo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_sphinx_coininfo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_npool_sphinx_coininfo_proto_rawDescGZIP(), []int{1}
}

func (x *VersionResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

// 注册币种信息
type RegisterCoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NeedSigninfo bool   `protobuf:"varint,1,opt,name=need_signinfo,json=needSigninfo,proto3" json:"need_signinfo,omitempty"` // 是否需要预签名信息
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                      // 币种名称：Filecoin
	Unit         string `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`                                      // 单位：FIL
}

func (x *RegisterCoinRequest) Reset() {
	*x = RegisterCoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_sphinx_coininfo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterCoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterCoinRequest) ProtoMessage() {}

func (x *RegisterCoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_sphinx_coininfo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterCoinRequest.ProtoReflect.Descriptor instead.
func (*RegisterCoinRequest) Descriptor() ([]byte, []int) {
	return file_npool_sphinx_coininfo_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterCoinRequest) GetNeedSigninfo() bool {
	if x != nil {
		return x.NeedSigninfo
	}
	return false
}

func (x *RegisterCoinRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterCoinRequest) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

// 注册成功通知
type RegisterCoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // "success"
}

func (x *RegisterCoinResponse) Reset() {
	*x = RegisterCoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_sphinx_coininfo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterCoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterCoinResponse) ProtoMessage() {}

func (x *RegisterCoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_sphinx_coininfo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterCoinResponse.ProtoReflect.Descriptor instead.
func (*RegisterCoinResponse) Descriptor() ([]byte, []int) {
	return file_npool_sphinx_coininfo_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterCoinResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

// 数据库内CoinInfo
type CoinInfoRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NeedSigninfo bool   `protobuf:"varint,2,opt,name=need_signinfo,json=needSigninfo,proto3" json:"need_signinfo,omitempty"` // 是否需要预签名信息
	Name         string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                      // 币种名称：Filecoin
	Unit         string `protobuf:"bytes,4,opt,name=unit,proto3" json:"unit,omitempty"`                                      // 单位：FIL
}

func (x *CoinInfoRow) Reset() {
	*x = CoinInfoRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_sphinx_coininfo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinInfoRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinInfoRow) ProtoMessage() {}

func (x *CoinInfoRow) ProtoReflect() protoreflect.Message {
	mi := &file_npool_sphinx_coininfo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinInfoRow.ProtoReflect.Descriptor instead.
func (*CoinInfoRow) Descriptor() ([]byte, []int) {
	return file_npool_sphinx_coininfo_proto_rawDescGZIP(), []int{4}
}

func (x *CoinInfoRow) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CoinInfoRow) GetNeedSigninfo() bool {
	if x != nil {
		return x.NeedSigninfo
	}
	return false
}

func (x *CoinInfoRow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CoinInfoRow) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

// 所有币种信息
type GetCoinInfosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*CoinInfoRow `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"` // array
}

func (x *GetCoinInfosResponse) Reset() {
	*x = GetCoinInfosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_sphinx_coininfo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinInfosResponse) ProtoMessage() {}

func (x *GetCoinInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_sphinx_coininfo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinInfosResponse.ProtoReflect.Descriptor instead.
func (*GetCoinInfosResponse) Descriptor() ([]byte, []int) {
	return file_npool_sphinx_coininfo_proto_rawDescGZIP(), []int{5}
}

func (x *GetCoinInfosResponse) GetInfos() []*CoinInfoRow {
	if x != nil {
		return x.Infos
	}
	return nil
}

var File_npool_sphinx_coininfo_proto protoreflect.FileDescriptor

var file_npool_sphinx_coininfo_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2d, 0x63,
	0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x73,
	0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x15, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x25, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x62, 0x0a, 0x13, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x53, 0x69,
	0x67, 0x6e, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x2a,
	0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x6a, 0x0a, 0x0b, 0x43, 0x6f,
	0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x6f, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x65, 0x65,
	0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x4d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35,
	0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x6f, 0x77, 0x52, 0x05,
	0x69, 0x6e, 0x66, 0x6f, 0x73, 0x32, 0xec, 0x02, 0x0a, 0x0e, 0x53, 0x70, 0x68, 0x69, 0x6e, 0x78,
	0x43, 0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x5e, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x73, 0x70,
	0x68, 0x69, 0x6e, 0x78, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x76, 0x30, 0x2f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x7f, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x27, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e,
	0x78, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x30, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x79, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x27, 0x2e, 0x73, 0x70, 0x68, 0x69,
	0x6e, 0x78, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x63, 0x6f, 0x69, 0x6e,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x30, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2f, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2d, 0x63, 0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x66, 0x6f,
	0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_sphinx_coininfo_proto_rawDescOnce sync.Once
	file_npool_sphinx_coininfo_proto_rawDescData = file_npool_sphinx_coininfo_proto_rawDesc
)

func file_npool_sphinx_coininfo_proto_rawDescGZIP() []byte {
	file_npool_sphinx_coininfo_proto_rawDescOnce.Do(func() {
		file_npool_sphinx_coininfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_sphinx_coininfo_proto_rawDescData)
	})
	return file_npool_sphinx_coininfo_proto_rawDescData
}

var file_npool_sphinx_coininfo_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_npool_sphinx_coininfo_proto_goTypes = []interface{}{
	(*GetCoinInfosRequest)(nil),  // 0: sphinx.coininfo.v1.GetCoinInfosRequest
	(*VersionResponse)(nil),      // 1: sphinx.coininfo.v1.VersionResponse
	(*RegisterCoinRequest)(nil),  // 2: sphinx.coininfo.v1.RegisterCoinRequest
	(*RegisterCoinResponse)(nil), // 3: sphinx.coininfo.v1.RegisterCoinResponse
	(*CoinInfoRow)(nil),          // 4: sphinx.coininfo.v1.CoinInfoRow
	(*GetCoinInfosResponse)(nil), // 5: sphinx.coininfo.v1.GetCoinInfosResponse
	(*emptypb.Empty)(nil),        // 6: google.protobuf.Empty
}
var file_npool_sphinx_coininfo_proto_depIdxs = []int32{
	4, // 0: sphinx.coininfo.v1.GetCoinInfosResponse.infos:type_name -> sphinx.coininfo.v1.CoinInfoRow
	6, // 1: sphinx.coininfo.v1.SphinxCoininfo.Version:input_type -> google.protobuf.Empty
	2, // 2: sphinx.coininfo.v1.SphinxCoininfo.RegisterCoin:input_type -> sphinx.coininfo.v1.RegisterCoinRequest
	0, // 3: sphinx.coininfo.v1.SphinxCoininfo.GetCoinInfos:input_type -> sphinx.coininfo.v1.GetCoinInfosRequest
	1, // 4: sphinx.coininfo.v1.SphinxCoininfo.Version:output_type -> sphinx.coininfo.v1.VersionResponse
	3, // 5: sphinx.coininfo.v1.SphinxCoininfo.RegisterCoin:output_type -> sphinx.coininfo.v1.RegisterCoinResponse
	5, // 6: sphinx.coininfo.v1.SphinxCoininfo.GetCoinInfos:output_type -> sphinx.coininfo.v1.GetCoinInfosResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_npool_sphinx_coininfo_proto_init() }
func file_npool_sphinx_coininfo_proto_init() {
	if File_npool_sphinx_coininfo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_sphinx_coininfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinInfosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_sphinx_coininfo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_sphinx_coininfo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterCoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_sphinx_coininfo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterCoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_sphinx_coininfo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinInfoRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_sphinx_coininfo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinInfosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_sphinx_coininfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_sphinx_coininfo_proto_goTypes,
		DependencyIndexes: file_npool_sphinx_coininfo_proto_depIdxs,
		MessageInfos:      file_npool_sphinx_coininfo_proto_msgTypes,
	}.Build()
	File_npool_sphinx_coininfo_proto = out.File
	file_npool_sphinx_coininfo_proto_rawDesc = nil
	file_npool_sphinx_coininfo_proto_goTypes = nil
	file_npool_sphinx_coininfo_proto_depIdxs = nil
}
